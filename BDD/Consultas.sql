--Puestos con lista de categorias

select PUESTO.ID_PUESTO, NOMBRE_PUESTO, SALARIO, LINK_IMAGEN,
       LISTAGG(C2.NOMBRE_CATEGORIA, ',') within group ( order by C2.NOMBRE_CATEGORIA) as Categorias,
       PD.ID_DEPARTAMENTO
from PUESTO
INNER JOIN PUESTO_CATEGORIA PC on PUESTO.ID_PUESTO = PC.ID_PUESTO
INNER JOIN CATEGORIA C2 on PC.ID_CATEGORIA = C2.ID_CATEGORIA
INNER JOIN PUESTO_DEPARTAMENTO PD on PUESTO.ID_PUESTO = PD.ID_PUESTO
group by PUESTO.ID_PUESTO, NOMBRE_PUESTO, SALARIO, LINK_IMAGEN, PD.ID_DEPARTAMENTO
;

--Lista de Usuarios
select ID_USUARIO,  USERNAME, PASSWORD, R.NOMBRE_ROL, D.NOMBRE_DEPARTAMENTO, to_char(FECHA_INI,'DD/MM/YYYY')
from USUARIO
inner join DEPARTAMENTO D on D.ID_DEPARTAMENTO = USUARIO.ID_DEPARTAMENTO
inner join ROL R on R.ID_ROL = USUARIO.ID_ROL
where ESTADO = 1;


--Lista de departamentos especialmente para el coordinador
select * from DEPARTAMENTO Dep WHERE not Exists(
    select * from(
                  select Dep.ID_DEPARTAMENTO, Dep.NOMBRE_DEPARTAMENTO
FROM DEPARTAMENTO Dep
inner join USUARIO on Dep.ID_DEPARTAMENTO = USUARIO.ID_DEPARTAMENTO
inner join ROL on USUARIO.ID_ROL = ROL.ID_ROL
where rol.ID_ROL = 2
)Coors
where Dep.ID_DEPARTAMENTO = Coors.ID_DEPARTAMENTO);


--Lista de revisores disponibles
select REVISOR_EXPEDIENTES.ID_USUARIO, USUARIO.USERNAME ,CANTIDAD_EXP
from REVISOR_EXPEDIENTES
inner join USUARIO on REVISOR_EXPEDIENTES.ID_USUARIO = USUARIO.ID_USUARIO
group by REVISOR_EXPEDIENTES.ID_USUARIO, CANTIDAD_EXP, USUARIO.ID_DEPARTAMENTO, USUARIO.ESTADO, USUARIO.USERNAME
having USUARIO.ID_DEPARTAMENTO = 1
and USUARIO.ESTADO = 1
ORDER BY CANTIDAD_EXP ASC
fetch next 1 rows only
;

select * from USUARIO;
select * from REVISOR_EXPEDIENTES;


update REVISOR_EXPEDIENTES
set CANTIDAD_EXP = 5
where ID_REVISOR_EXPEDIENTES = 5;


commit;